plugins {
    id 'java-library'
}
description = "Module for writing JGiven tests with JUnit 5"

compileJava {
    options.compilerArgs += '-parameters'
    options.encoding = 'UTF-8'
}

test {
    useJUnitPlatform()
    finalizedBy(jgivenHtml5Report)
}

dependencies {
    api project(':jgiven-core')

    compileOnly 'org.junit.jupiter:junit-jupiter-api:5.8.1'

    testImplementation project(':jgiven-html5-report')
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    testImplementation 'org.junit.platform:junit-platform-runner:1.8.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.8.1'
}

def generatedSourceDir = "generatedSrc/java"

sourceSets {
    main {
        java {
            srcDirs = ["src/main/java", generatedSourceDir]
        }
    }
}

files { file("../jgiven-core/src/main/translations").listFiles() }.collect {
    def pkg = it.getName().split("\\.")[0]

    def props = new Properties()
    it.withInputStream { props.load(it) }
    props.pkg = pkg
    def taskName = pkg + 'Translation'

    tasks.create(name: taskName, type: Copy) {
        from 'src/main/templates'
        into generatedSourceDir + "/com/tngtech/jgiven/junit5/lang/" + pkg
        rename("SimpleScenarioTest.template", props.simple_scenario_test_class + ".java")
        rename("ScenarioTest.template", props.scenario_test_class + ".java")
        expand(props)
        filteringCharset = 'UTF-8'
    }
    compileJava.dependsOn += taskName
}
