//file:noinspection GroovyAssignabilityCheck
buildscript {
    repositories {
        google()
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.2.2'
    }
}

apply plugin: 'com.android.application'

repositories {
    google()
    mavenLocal()
    mavenCentral()
}

android {
    compileSdkVersion 31
    defaultConfig {
        applicationId "com.tngtech.jgiven.android.example"
        minSdkVersion 29
        targetSdkVersion 31
        versionCode 1
        versionName "${version}"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

configurations {
    jgivenReport
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.4.2'

    androidTestImplementation('androidx.test.espresso:espresso-core:3.4.0', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation('androidx.test:rules:1.4.0') {
        exclude group: "junit"
    }
    androidTestImplementation('com.tngtech.jgiven:jgiven-android:' + version)

    jgivenReport 'com.tngtech.jgiven:jgiven-html5-report:' + version
    jgivenReport 'org.slf4j:slf4j-simple:1.7.36'
}

def targetDir = 'build/reports/jgiven/json'
def adb = android.getAdbExe().toString()
def reportsDir = '/storage/emulated/0/Download/jgiven-reports'

task cleanJGivenReports(type: Delete) {
    delete targetDir
}

task pullJGivenReports(type: Exec, dependsOn: cleanJGivenReports) {
    doFirst {
        if (!file(targetDir).mkdirs()) {
            println("Cannot create dir " + targetDir)
        }
    }

    commandLine adb, 'pull', reportsDir, targetDir

    doLast {
        println("Pulled " + reportsDir + " to " + targetDir)
    }
}

task cleanJGivenReportsFromDevice(type: Exec) {
    commandLine adb, 'shell', 'rm -rf', reportsDir

    doLast {
        println("Deleted " + reportsDir)
    }
}

pullJGivenReports.finalizedBy(cleanJGivenReportsFromDevice)

task cleanJGivenHtmlReport(type: Delete) {
    delete 'build/reports/jgiven/html'
}

task jgivenHtml5Report(type: JavaExec, dependsOn: cleanJGivenHtmlReport) {
    //noinspection GroovyAccessibility
    mainClass = 'com.tngtech.jgiven.report.ReportGenerator'
    args '--sourceDir=build/reports/jgiven/json',
            '--targetDir=build/reports/jgiven/html',
            '--format=html5',
            '--exclude-empty-scenarios=true'
    classpath = configurations.jgivenReport
}

pullJGivenReports.finalizedBy(jgivenHtml5Report)

tasks.whenTaskAdded { task ->
    if (task.name == 'connectedAndroidTest') {
        task.finalizedBy 'pullJGivenReports'
    }
}
