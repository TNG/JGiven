plugins {
    id 'java-library'
}

description = "JGiven core module"

dependencies {
    api 'com.google.guava:guava:33.4.0-jre'
    api 'com.google.code.gson:gson:2.11.0'
    implementation 'com.thoughtworks.paranamer:paranamer:2.8'
    implementation libs.byteBuddy
    implementation 'org.fusesource.jansi:jansi:2.4.1'

    testImplementation 'com.github.stefanbirkner:system-rules:1.19.0'
}

def generatedSourceDir = "generatedSrc/java"

sourceSets {
    main {
        java {
            srcDirs = ["src/main/java", generatedSourceDir]
        }
    }
}

def buildNumber = 'git rev-parse --short HEAD'.execute().text.trim()


println 'BUILD SHA1: ' + buildNumber

processResources {
    expand(
            'version': project.version,
            'buildNumber': buildNumber
    )
}

files { file("src/main/translations").listFiles() }.collect {
    def pkg = it.getName().split("\\.")[0]

    def props = new Properties()
    it.withInputStream { props.load(it) }
    props.pkg = pkg
    def taskName = pkg + 'Translation'

    tasks.register(taskName, Copy) {
        from 'src/main/templates'
        into generatedSourceDir + "/com/tngtech/jgiven/lang/" + pkg
        rename("Stage.template", props.stage_class + ".java")
        rename("SimpleScenarioTestBase.template", props.simple_scenario_test_base_class + ".java")
        rename("ScenarioTestBase.template", props.scenario_test_base_class + ".java")
        expand(props)
        filteringCharset = 'UTF-8'
    }
    compileJava.dependsOn += taskName
    jar.dependsOn += taskName
    sourcesJar.dependsOn += taskName
    javadoc.dependsOn += taskName
}

tasks.register("runShellCommand", Exec){
    commandLine 'git', 'rev-parse', '--short', 'HEAD'
}
